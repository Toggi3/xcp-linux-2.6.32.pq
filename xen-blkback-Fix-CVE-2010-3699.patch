From 160689ad7b417a440b16a26ad94f3fc11373aec9 Mon Sep 17 00:00:00 2001
From: Keir Fraser <keir@xen.org>
Date: Wed, 24 Nov 2010 22:08:20 -0800
Subject: [PATCH] blkback: Fix CVE-2010-3699

A guest can cause the backend driver to leak a kernel thread. Such
leaked threads hold references to the device, whichmakes the device
impossible to tear down. If shut down, the guest remains a zombie
domain, the xenwatch process hangs, and most xm commands will stop
working.

This patch tries to do the following for blkback:
    - identify/extract idempotent teardown operations,
    - add/move the invocation of said teardown operation
      right before we're about to allocate new resources in the
      Connected states.

[ linux-2.6.18-xen.hg 59f097ef181b ]

Signed-off-by: Laszlo Ersek <lersek@redhat.com>
Signed-off-by: Keir Fraser <keir@xen.org>
Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
---
 drivers/xen/blkback/xenbus.c |    7 +++++++
 1 file changed, 7 insertions(+)

Index: linux-2.6.32.hg/drivers/xen/blkback/xenbus.c
===================================================================
--- linux-2.6.32.hg.orig/drivers/xen/blkback/xenbus.c	2010-12-01 17:36:24.683007998 +0000
+++ linux-2.6.32.hg/drivers/xen/blkback/xenbus.c	2010-12-03 14:10:22.110934232 +0000
@@ -771,6 +771,12 @@ static void frontend_changed(struct xenb
 		   of frontend_state. */
 		if (dev->state != XenbusStateConnected &&
 		    dev->state != XenbusStateClosing) {
+
+			/* Enforce precondition before potential leak point.
+			 * blkif_disconnect() is idempotent.
+			 */
+			blkif_disconnect(be->blkif);
+
 			err = connect_ring(be);
 			if (!err) {
 				blkback_reopen_bdev(be);
@@ -803,6 +809,7 @@ static void frontend_changed(struct xenb
 		break;
 
 	case XenbusStateUnknown:
+		/* implies blkif_disconnect() via blkback_remove() */
 		device_unregister(&dev->dev);
 		break;
 
