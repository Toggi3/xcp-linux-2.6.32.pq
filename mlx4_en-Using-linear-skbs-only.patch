From b5601098d7451e2fdb7c9eb56df5296e9fb8f8e2 Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Thu, 25 Mar 2010 09:58:15 +0200
Subject: [PATCH] mlx4_en: Using linear skbs only

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/en_main.c   |   10 +++-------
 drivers/net/mlx4/en_netdev.c |    5 +----
 2 files changed, 4 insertions(+), 11 deletions(-)

diff --git a/drivers/net/mlx4/en_main.c b/drivers/net/mlx4/en_main.c
index 8e4b7f8..79f7dbc 100644
--- a/drivers/net/mlx4/en_main.c
+++ b/drivers/net/mlx4/en_main.c
@@ -68,14 +68,10 @@ static const char mlx4_en_version[] __devinitdata =
 MLX4_EN_PARM_INT(rss_xor, 0, "Use XOR hash function for RSS");
 
 /* RSS hash type mask - default to <saddr, daddr, sport, dport> */
-MLX4_EN_PARM_INT(rss_mask, 0x5, "RSS hash type bitmask");
-
-/* Number of LRO sessions per Rx ring (rounded up to a power of two) */
-MLX4_EN_PARM_INT(num_lro, MLX4_EN_MAX_LRO_DESCRIPTORS,
-		 "Number of LRO sessions per ring or disabled (0)");
+MLX4_EN_PARM_INT(rss_mask, 0xf, "RSS hash type bitmask");
 
 /* Allow reassembly of fragmented IP packets */
-MLX4_EN_PARM_INT(ip_reasm, 1, "Allow reassembly of fragmented IP packets (!0)");
+MLX4_EN_PARM_INT(ip_reasm, 0, "Allow reassembly of fragmented IP packets (!0)");
 
 /* Priority pausing */
 MLX4_EN_PARM_INT(pfctx, 0, "Priority based Flow Control policy on TX[7:0]."
@@ -90,7 +86,7 @@ int mlx4_en_get_profile(struct mlx4_en_dev *mdev)
 
 	params->rss_xor = (rss_xor != 0);
 	params->rss_mask = rss_mask & 0x1f;
-	params->num_lro = min_t(int, num_lro , MLX4_EN_MAX_LRO_DESCRIPTORS);
+	params->num_lro = 0;
 	params->ip_reasm = ip_reasm;
 	for (i = 1; i <= MLX4_MAX_PORTS; i++) {
 		params->prof[i].rx_pause = 1;
diff --git a/drivers/net/mlx4/en_netdev.c b/drivers/net/mlx4/en_netdev.c
index 7145044..b8c14ad 100644
--- a/drivers/net/mlx4/en_netdev.c
+++ b/drivers/net/mlx4/en_netdev.c
@@ -864,10 +864,7 @@ int mlx4_en_alloc_resources(struct mlx4_en_priv *priv)
 
 	/* Create rx Rings */
 	for (i = 0; i < priv->rx_ring_num; i++) {
-		if (i > 0)
-			priv->rx_ring[i].use_frags = 1;
-		else
-			priv->rx_ring[i].use_frags = 0;
+		priv->rx_ring[i].use_frags = 0;
 
 		if (mlx4_en_create_cq(priv, &priv->rx_cq[i],
 				      prof->rx_ring_size, i, RX))
-- 
1.5.3.7

