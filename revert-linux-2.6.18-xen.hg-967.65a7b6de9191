diff -r 23de915641d5 drivers/xen/gntdev/gntdev.c
--- a/drivers/xen/gntdev/gntdev.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/gntdev/gntdev.c	Wed May 26 16:44:47 2010 +0100
@@ -501,7 +501,7 @@
 	unsigned long kernel_vaddr, user_vaddr;
 	uint32_t size = (vma->vm_end - vma->vm_start) >> PAGE_SHIFT;
 	uint64_t ptep;
-	int ret, exit_ret;
+	int ret;
 	int flags;
 	int i;
 	struct page *page;
@@ -578,7 +578,6 @@
 	vma->vm_mm->context.has_foreign_mappings = 1;
 #endif
 
-    exit_ret = -ENOMEM;
 	for (i = 0; i < size; ++i) {
 
 		flags = GNTMAP_host_map;
@@ -600,17 +599,13 @@
 						&op, 1);
 		BUG_ON(ret);
 		if (op.status) {
-            if(op.status != GNTST_eagain)
-				printk(KERN_ERR "Error mapping the grant reference "
-				       "into the kernel (%d). domid = %d; ref = %d\n",
-				       op.status,
-				       private_data->grants[slot_index+i]
-				       .u.valid.domid,
-				       private_data->grants[slot_index+i]
-				       .u.valid.ref);
-            else 
-                /* Propagate eagain instead of trying to fix it up */
-                exit_ret = -EAGAIN;
+			printk(KERN_ERR "Error mapping the grant reference "
+			       "into the kernel (%d). domid = %d; ref = %d\n",
+			       op.status,
+			       private_data->grants[slot_index+i]
+			       .u.valid.domid,
+			       private_data->grants[slot_index+i]
+			       .u.valid.ref);
 			goto undo_map_out;
 		}
 
@@ -687,9 +682,6 @@
 				       .valid.domid,
 				       private_data->grants[slot_index+i].u
 				       .valid.ref);
-                /* This should never happen after we've mapped into 
-                 * the kernel space. */
-                BUG_ON(op.status == GNTST_eagain);
 				goto undo_map_out;
 			}
 			
@@ -713,10 +705,9 @@
 		}
 
 	}
-    exit_ret = 0;
 
 	up_write(&private_data->grants_sem);
-	return exit_ret;
+	return 0;
 
 undo_map_out:
 	/* If we have a mapping failure, the unmapping will be taken care of
@@ -734,7 +725,7 @@
 	
 	up_write(&private_data->grants_sem);
 
-	return exit_ret;
+	return -ENOMEM;
 }
 
 static pte_t gntdev_clear_pte(struct vm_area_struct *vma, unsigned long addr,
diff -r 23de915641d5 drivers/xen/scsiback/interface.c
--- a/drivers/xen/scsiback/interface.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/scsiback/interface.c	Wed May 26 16:44:47 2010 +0100
@@ -37,7 +37,6 @@
 
 #include <xen/evtchn.h>
 #include <linux/kthread.h>
-#include <linux/delay.h>
 
 
 static struct kmem_cache *scsiback_cachep;
@@ -70,11 +69,8 @@
 				GNTMAP_host_map, ring_ref,
 				info->domid);
 
-    do {
-	    err = HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1);
-	    BUG_ON(err);
-        msleep(10);
-    } while(op.status == GNTST_eagain);
+	err = HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1);
+	BUG_ON(err);
 
 	if (op.status) {
 		printk(KERN_ERR "scsiback: Grant table operation failure !\n");
diff -r 23de915641d5 drivers/xen/scsiback/scsiback.c
--- a/drivers/xen/scsiback/scsiback.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/scsiback/scsiback.c	Wed May 26 16:44:47 2010 +0100
@@ -283,17 +283,6 @@
 
 		err = HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, map, nr_segments);
 		BUG_ON(err);
-        /* Retry maps with GNTST_eagain */
-        for(i=0; i < nr_segments; i++) {
-            while(unlikely(map[i].status == GNTST_eagain))
-            {
-                msleep(10);
-		        err = HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, 
-                                                &map[i], 
-                                                1);
-		        BUG_ON(err);
-            }
-        }
 
 		for_each_sg (pending_req->sgl, sg, nr_segments, i) {
 			struct page *pg;
diff -r 23de915641d5 drivers/xen/sfc_netback/accel_xenbus.c
--- a/drivers/xen/sfc_netback/accel_xenbus.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/sfc_netback/accel_xenbus.c	Wed May 26 16:44:47 2010 +0100
@@ -24,7 +24,6 @@
 
 #include <xen/evtchn.h>
 #include <linux/mutex.h>
-#include <linux/delay.h>
 
 /* drivers/xen/netback/common.h */
 #include "common.h"
diff -r 23de915641d5 drivers/xen/sfc_netutil/accel_util.c
--- a/drivers/xen/sfc_netutil/accel_util.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/sfc_netutil/accel_util.c	Wed May 26 16:44:47 2010 +0100
@@ -23,7 +23,6 @@
  */
 
 #include <linux/if_ether.h>
-#include <linux/delay.h>
 #include <asm/io.h>
 #include <asm/pgtable.h>
 #include <asm/hypercall.h>
@@ -144,7 +143,7 @@
 /* Map a series of grants into a contiguous virtual area */
 static void *net_accel_map_grants_valloc(struct xenbus_device *dev, 
 					 unsigned *grants, int npages, 
-					 unsigned flags, void **priv, int *errno)
+					 unsigned flags, void **priv)
 {
 	struct net_accel_valloc_grant_mapping *map;
 	struct vm_struct *vm;
@@ -172,16 +171,11 @@
 
 	/* Do the actual mapping */
 	addr = vm->addr;
-    if(errno != NULL) *errno = 0;
 	for (i = 0; i < npages; i++) {
 		rc = net_accel_map_grant(dev, grants[i], map->grant_handles + i, 
 					 addr, NULL, flags);
 		if (rc != 0)
-        {
-            if(errno != NULL) 
-                *errno = (rc == GNTST_eagain ? -EAGAIN : -EINVAL);
 			goto undo;
-        }
 		addr = (void*)((unsigned long)addr + PAGE_SIZE);
 	}
 
@@ -230,16 +224,8 @@
 				unsigned *grants, int npages, 
 				void **priv)
 {
-    int errno;
-    void *ret;
-
-    do {
-	    ret = net_accel_map_grants_valloc(dev, grants, npages,
-					   GNTMAP_host_map, priv, &errno);
-        if(errno) msleep(10);
-    } while(errno == -EAGAIN);
-
-    return ret;
+	return net_accel_map_grants_valloc(dev, grants, npages,
+					   GNTMAP_host_map, priv);
 }
 EXPORT_SYMBOL(net_accel_map_grants_contig);
 
@@ -255,16 +241,8 @@
 void *net_accel_map_iomem_page(struct xenbus_device *dev, int gnt_ref,
 			     void **priv)
 {
-    int errno;
-    void *ret;
-
-	do {
-        ret = net_accel_map_grants_valloc(dev, &gnt_ref, 1, 
-					   GNTMAP_host_map, priv, &errno);
-        if(errno) msleep(10);
-    } while(errno == -EAGAIN);
-
-    return ret;
+	return net_accel_map_grants_valloc(dev, &gnt_ref, 1, 
+					   GNTMAP_host_map, priv);
 }
 EXPORT_SYMBOL(net_accel_map_iomem_page);
 
diff -r 23de915641d5 drivers/xen/tpmback/interface.c
--- a/drivers/xen/tpmback/interface.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/tpmback/interface.c	Wed May 26 16:44:47 2010 +0100
@@ -86,11 +86,8 @@
 	gnttab_set_map_op(&op, (unsigned long)tpmif->tx_area->addr,
 			  GNTMAP_host_map, shared_page, tpmif->domid);
 
-    do {
-	    if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
-		    BUG();
-        msleep(10);
-    } while(op.status == GNTST_eagain);
+	if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
+		BUG();
 
 	if (op.status) {
 		DPRINTK(" Grant table operation failure !\n");
diff -r 23de915641d5 drivers/xen/tpmback/tpmback.c
--- a/drivers/xen/tpmback/tpmback.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/tpmback/tpmback.c	Wed May 26 16:44:47 2010 +0100
@@ -18,7 +18,6 @@
 #include <linux/list.h>
 #include <linux/miscdevice.h>
 #include <linux/poll.h>
-#include <linux/delay.h>
 #include <asm/uaccess.h>
 #include <xen/xenbus.h>
 #include <xen/interface/grant_table.h>
@@ -257,12 +256,10 @@
 		gnttab_set_map_op(&map_op, idx_to_kaddr(tpmif, i),
 				  GNTMAP_host_map, tx->ref, tpmif->domid);
 
-        do {
-		    if (unlikely(HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref,
-						       &map_op, 1)))
-			    BUG();
-            if(map_op.status) msleep(10);
-		} while(map_op.status == GNTST_eagain);
+		if (unlikely(HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref,
+						       &map_op, 1))) {
+			BUG();
+		}
 
 		handle = map_op.handle;
 
@@ -397,12 +394,10 @@
 		gnttab_set_map_op(&map_op, idx_to_kaddr(tpmif, i),
 				  GNTMAP_host_map, tx->ref, tpmif->domid);
 
-        do {
-		    if (unlikely(HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref,
-						       &map_op, 1)))
-			    BUG();
-            if(map_op.status) msleep(10);
-		} while(map_op.status == GNTST_eagain);
+		if (unlikely(HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref,
+						       &map_op, 1))) {
+			BUG();
+		}
 
 		if (map_op.status) {
 			DPRINTK(" Grant table operation failure !\n");
diff -r 23de915641d5 drivers/xen/usbback/interface.c
--- a/drivers/xen/usbback/interface.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/usbback/interface.c	Wed May 26 16:44:47 2010 +0100
@@ -43,7 +43,6 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
-#include <linux/delay.h>
 #include "usbback.h"
 
 static LIST_HEAD(usbif_list);
@@ -110,12 +109,8 @@
 	gnttab_set_map_op(&op, (unsigned long)usbif->urb_ring_area->addr,
 			  GNTMAP_host_map, urb_ring_ref, usbif->domid);
 
-
-    do {
-	    if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
-		    BUG();
-        msleep(10);
-    } while (op.status == GNTST_eagain);
+	if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
+		BUG();
 
 	if (op.status) {
 		printk(KERN_ERR "grant table failure mapping urb_ring_ref\n");
@@ -128,11 +123,8 @@
 	gnttab_set_map_op(&op, (unsigned long)usbif->conn_ring_area->addr,
 			  GNTMAP_host_map, conn_ring_ref, usbif->domid);
 
-    do {
-	    if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
-		    BUG();
-        msleep(10);
-    } while (op.status == GNTST_eagain);
+	if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
+		BUG();
 
 	if (op.status) {
 		struct gnttab_unmap_grant_ref unop;
diff -r 23de915641d5 drivers/xen/usbback/usbback.c
--- a/drivers/xen/usbback/usbback.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/usbback/usbback.c	Wed May 26 16:44:47 2010 +0100
@@ -426,16 +426,6 @@
 		ret = HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref,
 					map, nr_segs);
 		BUG_ON(ret);
-        /* Make sure than none of the map ops failed with GNTST_eagain */
-        for( i = 0; i < nr_segs; i++) {
-            while(map[i].status == GNTST_eagain) {
-                msleep(10);
-		        ret = HYPERVISOR_grant_table_op(
-                                GNTTABOP_map_grant_ref,
-				                &map[i], 1);
-		        BUG_ON(ret);
-            }
-        }
 
 		for (i = 0; i < nr_segs; i++) {
 			if (unlikely(map[i].status != 0)) {
diff -r 23de915641d5 drivers/xen/xenbus/xenbus_backend_client.c
--- a/drivers/xen/xenbus/xenbus_backend_client.c	Wed May 26 16:44:04 2010 +0100
+++ b/drivers/xen/xenbus/xenbus_backend_client.c	Wed May 26 16:44:47 2010 +0100
@@ -31,7 +31,6 @@
  */
 
 #include <linux/err.h>
-#include <linux/delay.h>
 #include <xen/gnttab.h>
 #include <xen/xenbus.h>
 #include <xen/driver_util.h>
@@ -49,11 +48,8 @@
 	gnttab_set_map_op(&op, (unsigned long)area->addr, GNTMAP_host_map,
 			  gnt_ref, dev->otherend_id);
 	
-    do {
-	    if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
-		    BUG();
-        msleep(10);
-    } while(op.status == GNTST_eagain);
+	if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
+		BUG();
 
 	if (op.status != GNTST_okay) {
 		free_vm_area(area);
@@ -79,11 +75,8 @@
 	
 	gnttab_set_map_op(&op, (unsigned long)vaddr, GNTMAP_host_map,
 			  gnt_ref, dev->otherend_id);
-    do {
-	    if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
-		    BUG();
-        msleep(10);
-    } while(op.status == GNTST_eagain);
+	if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
+		BUG();
 
 	if (op.status != GNTST_okay) {
 		xenbus_dev_fatal(dev, op.status,
