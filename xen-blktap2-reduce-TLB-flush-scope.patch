From 78c8e63d966f62c3808f8deb898f5c6c3b77073a Mon Sep 17 00:00:00 2001
From: Jan Beulich <jbeulich@novell.com>
Date: Fri, 5 Feb 2010 19:19:27 +0000
Subject: [PATCH 13/23] blktap2: reduce TLB flush scope

c/s 885 added very coarse TLB flushing. Since these flushes always
follow single page updates, single page flushes (when available) are
sufficient.

To linux-2.6-pvops:
 * Stripped arch/i386/mm/hypervisor.c exports
 * Stripped xen_invlpg_all(kvaddr) use on CONFIG_X86

Signed-off-by: Jan Beulich <jbeulich@novell.com>
Signed-off-by: Daniel Stodden <daniel.stodden@citrix.com>
Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
---
 drivers/xen/blktap2/device.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/drivers/xen/blktap2/device.c b/drivers/xen/blktap2/device.c
index 7505d0c..5617f26 100644
--- a/drivers/xen/blktap2/device.c
+++ b/drivers/xen/blktap2/device.c
@@ -197,6 +197,12 @@ blktap_umap_uaddr(struct mm_struct *mm, unsigned long address)
 				   PAGE_SIZE, blktap_umap_uaddr_fn, mm);
 }
 
+static inline void
+flush_tlb_kernel_page(unsigned long kvaddr)
+{
+	flush_tlb_kernel_range(kvaddr, kvaddr + PAGE_SIZE);
+}
+
 static void
 blktap_device_end_dequeued_request(struct blktap_device *dev,
 				   struct request *req, int error)
@@ -326,7 +332,7 @@ blktap_unmap(struct blktap *tap, struct blktap_request *request)
 		if (request->handles[i].kernel == INVALID_GRANT_HANDLE) {
 			kvaddr = request_to_kaddr(request, i);
 			blktap_umap_uaddr(tap->ring.vma->vm_mm, kvaddr);
-			flush_tlb_kernel_range(kvaddr, kvaddr + PAGE_SIZE);
+			flush_tlb_kernel_page(kvaddr);
 			set_phys_to_machine(__pa(kvaddr) >> PAGE_SHIFT,
 					    INVALID_P2M_ENTRY);
 		}
@@ -561,9 +567,9 @@ blktap_map(struct blktap *tap,
 
 	pte = mk_pte(page, ring->vma->vm_page_prot);
 	blktap_map_uaddr(ring->vma->vm_mm, uvaddr, pte_mkwrite(pte));
-	flush_tlb_mm(ring->vma->vm_mm);
+	flush_tlb_page(ring->vma, uvaddr);
 	blktap_map_uaddr(ring->vma->vm_mm, kvaddr, mk_pte(page, PAGE_KERNEL));
-	flush_tlb_kernel_range(kvaddr, kvaddr + PAGE_SIZE);
+	flush_tlb_kernel_page(kvaddr);
 
 	set_phys_to_machine(__pa(kvaddr) >> PAGE_SHIFT, pte_mfn(pte));
 	request->handles[seg].kernel = INVALID_GRANT_HANDLE;
-- 
1.7.0.4

