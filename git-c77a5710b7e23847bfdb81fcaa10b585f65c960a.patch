From c77a5710b7e23847bfdb81fcaa10b585f65c960a Mon Sep 17 00:00:00 2001
From: Martin K. Petersen <martin.petersen@oracle.com>
Date: Wed, 10 Mar 2010 00:48:33 -0500
Subject: [PATCH] block: Export max number of segments and max segment size in sysfs

These two values are useful when debugging issues surrounding maximum
I/O size.  Put them in sysfs with the rest of the queue limits.

Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Signed-off-by: Jens Axboe <jens.axboe@oracle.com>

XS Backport: 2.6.32 has phys_segments and hw_segments limits. These
are pretty bogus, only for SCSI, and later (v2.6.33-22-g8a78362)
consolidated.

Signed-off-by: Daniel Stodden <daniel.stodden@citrix.com>

---
 block/blk-sysfs.c |   25 +++++++++++++++++++++++++
 1 files changed, 25 insertions(+), 0 deletions(-)

diff --git a/block/blk-sysfs.c b/block/blk-sysfs.c
index e854424..fad8655 100644
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@ -106,6 +106,19 @@ static ssize_t queue_max_sectors_show(struct request_queue *q, char *page)
 	return queue_var_show(max_sectors_kb, (page));
 }
 
+static ssize_t queue_max_segments_show(struct request_queue *q, char *page)
+{
+	return queue_var_show(queue_max_segments(q), (page));
+}
+
+static ssize_t queue_max_segment_size_show(struct request_queue *q, char *page)
+{
+	if (test_bit(QUEUE_FLAG_CLUSTER, &q->queue_flags))
+		return queue_var_show(queue_max_segment_size(q), (page));
+
+	return queue_var_show(PAGE_CACHE_SIZE, (page));
+}
+
 static ssize_t queue_logical_block_size_show(struct request_queue *q, char *page)
 {
 	return queue_var_show(queue_logical_block_size(q), page);
@@ -280,6 +293,16 @@ static struct queue_sysfs_entry queue_max_hw_sectors_entry = {
 	.show = queue_max_hw_sectors_show,
 };
 
+static struct queue_sysfs_entry queue_max_segments_entry = {
+	.attr = {.name = "max_segments", .mode = S_IRUGO },
+	.show = queue_max_segments_show,
+};
+
+static struct queue_sysfs_entry queue_max_segment_size_entry = {
+	.attr = {.name = "max_segment_size", .mode = S_IRUGO },
+	.show = queue_max_segment_size_show,
+};
+
 static struct queue_sysfs_entry queue_iosched_entry = {
 	.attr = {.name = "scheduler", .mode = S_IRUGO | S_IWUSR },
 	.show = elv_iosched_show,
@@ -355,6 +378,8 @@ static struct attribute *default_attrs[] = {
 	&queue_ra_entry.attr,
 	&queue_max_hw_sectors_entry.attr,
 	&queue_max_sectors_entry.attr,
+	&queue_max_segments_entry.attr,
+	&queue_max_segment_size_entry.attr,
 	&queue_iosched_entry.attr,
 	&queue_hw_sector_size_entry.attr,
 	&queue_logical_block_size_entry.attr,
diff -r 2e2aa7bd13e5 -r 2da3bdb6f7d1 block/blk-sysfs.c
--- a/block/blk-sysfs.c	Wed Mar 30 14:45:10 2011 -0700
+++ b/block/blk-sysfs.c	Wed Mar 30 15:27:57 2011 -0700
@@ -106,6 +106,17 @@
 	return queue_var_show(max_sectors_kb, (page));
 }
 
+#include <scsi/scsi.h>
+
+static inline unsigned int
+queue_max_segments(struct request_queue *q)
+{
+	struct queue_limits *limits = &q->limits;
+	/* 2.6.32 has phys_segments and hw_segment limits. These were
+	   only for SCSI and later (v2.6.33-22-g8a78362) consolidated. */
+	return min(limits->max_hw_segments, limits->max_phys_segments);
+}
+
 static ssize_t queue_max_segments_show(struct request_queue *q, char *page)
 {
 	return queue_var_show(queue_max_segments(q), (page));
-- 
1.7.0.4

