diff -r d9afb2744b72 arch/x86/include/mach-xen/asm/irq_vectors.h
--- a/arch/x86/include/mach-xen/asm/irq_vectors.h	Wed May 26 15:05:33 2010 +0100
+++ b/arch/x86/include/mach-xen/asm/irq_vectors.h	Wed May 26 15:05:58 2010 +0100
@@ -89,7 +89,7 @@
 #endif
 
 #define DYNIRQ_BASE			(PIRQ_BASE + nr_pirqs)
-#define NR_DYNIRQS			(64 + CONFIG_XEN_NR_GUEST_DEVICES)
+#define NR_DYNIRQS			256
 
 #define NR_IRQS				(NR_PIRQS + NR_DYNIRQS)
 
diff -r d9afb2744b72 drivers/xen/Kconfig
--- a/drivers/xen/Kconfig	Wed May 26 15:05:33 2010 +0100
+++ b/drivers/xen/Kconfig	Wed May 26 15:05:58 2010 +0100
@@ -96,15 +96,6 @@
 	  The network-device backend driver allows the kernel to export its
 	  network devices to other guests via a high-performance shared-memory
 	  interface.
-
-config XEN_NETDEV_TX_SHIFT
-	int "Maximum simultaneous transmit requests (as a power of 2)"
-	depends on XEN_NETDEV_BACKEND
-	range 5 16
-	default 8
-	help
-	  The maximum number transmits the driver can hold pending, expressed
-	  as the exponent of a power of 2.
 
 config XEN_NETDEV_PIPELINED_TRANSMITTER
 	bool "Pipelined transmitter (DANGEROUS)"
@@ -318,16 +309,6 @@
 	help
 	  Xen hypervisor attributes will show up under /sys/hypervisor/.
 
-config XEN_NR_GUEST_DEVICES
-	int "Number of guest devices"
-	range 0 4032 if 64BIT
-	range 0 960
-	default 256 if XEN_BACKEND
-	default 16
-	help
-	  Specify the total number of virtual devices (i.e. both frontend
-	  and backend) that you want the kernel to be able to service.
-
 choice
 	prompt "Xen version compatibility"
 	default XEN_COMPAT_030002_AND_LATER
diff -r d9afb2744b72 drivers/xen/netback/netback.c
--- a/drivers/xen/netback/netback.c	Wed May 26 15:05:33 2010 +0100
+++ b/drivers/xen/netback/netback.c	Wed May 26 15:05:58 2010 +0100
@@ -71,7 +71,7 @@
 static struct timer_list net_timer;
 static struct timer_list netbk_tx_pending_timer;
 
-#define MAX_PENDING_REQS (1U << CONFIG_XEN_NETDEV_TX_SHIFT)
+#define MAX_PENDING_REQS 256
 
 static struct sk_buff_head rx_queue;
 
@@ -1265,7 +1265,6 @@
 	net_tx_action_dealloc();
 
 	mop = tx_map_ops;
-	BUILD_BUG_ON(MAX_SKB_FRAGS >= MAX_PENDING_REQS);
 	while (((NR_PENDING_REQS + MAX_SKB_FRAGS) < MAX_PENDING_REQS) &&
 		!list_empty(&net_schedule_list)) {
 		/* Get a netif from the list with work to do. */
