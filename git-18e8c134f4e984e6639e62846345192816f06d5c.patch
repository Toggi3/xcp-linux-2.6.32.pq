commit 18e8c134f4e984e6639e62846345192816f06d5c
Author: Eric Dumazet <eric.dumazet@gmail.com>
Date:   Thu May 6 21:58:51 2010 -0700

    net: Increase NET_SKB_PAD to 64 bytes
    
    eth_type_trans() & get_rps_cpus() currently need two 64bytes cache
    lines in packet to compute rxhash.
    
    Increasing NET_SKB_PAD from 32 to 64 reduces the need to one cache
    line only, and makes RPS faster.
    
    NET_IP_ALIGN(2) + ethernet_header(14) + IP_header(20/40) + ports(8)
    
    Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

---
 include/linux/skbuff.h |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

Index: linux-2.6.27.hg/include/linux/skbuff.h
===================================================================
--- linux-2.6.27.hg.orig/include/linux/skbuff.h	2010-07-29 15:53:41.023468931 +0100
+++ linux-2.6.27.hg/include/linux/skbuff.h	2010-07-29 15:53:52.294750136 +0100
@@ -1152,9 +1152,12 @@
  *
  * Various parts of the networking layer expect at least 32 bytes of
  * headroom, you should not reduce this.
+ * With RPS, we raised NET_SKB_PAD to 64 so that get_rps_cpus() fetches span
+ * a 64 bytes aligned block to fit modern (>= 64 bytes) cache line sizes
+ * NET_IP_ALIGN(2) + ethernet_header(14) + IP_header(20/40) + ports(8)
  */
 #ifndef NET_SKB_PAD
-#define NET_SKB_PAD	32
+#define NET_SKB_PAD	64
 #endif
 
 extern int ___pskb_trim(struct sk_buff *skb, unsigned int len);
