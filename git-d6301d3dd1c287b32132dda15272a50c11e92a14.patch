commit d6301d3dd1c287b32132dda15272a50c11e92a14
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Feb 8 19:24:13 2009 -0800

    net: Increase default NET_SKB_PAD to 32.

    Several devices need to insert some "pre headers" in front of the
    main packet data when they transmit a packet.

    Currently we allocate only 16 bytes of pad room and this ends up not
    being enough for some types of hardware (NIU, usb-net, s390 qeth,
    etc.)

    So increase this to 32.

    Note that drivers still need to check in their transmit routine
    whether enough headroom exists, and if not use skb_realloc_headroom().
    Tunneling, IPSEC, and other encapsulation methods can cause the
    padding area to be used up.

    Signed-off-by: David S. Miller <davem@davemloft.net>

---
 include/linux/skbuff.h |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff -r 22c2d259030a include/linux/skbuff.h
--- a/include/linux/skbuff.h	Tue Jul 13 15:05:55 2010 +0100
+++ b/include/linux/skbuff.h	Fri Jul 30 10:53:26 2010 +0100
@@ -1133,7 +1133,7 @@
  * The networking layer reserves some headroom in skb data (via
  * dev_alloc_skb). This is used to avoid having to reallocate skb data when
  * the header has to grow. In the default case, if the header has to grow
- * 16 bytes or less we avoid the reallocation.
+ * 32 bytes or less we avoid the reallocation.
  *
  * Unfortunately this headroom changes the DMA alignment of the resulting
  * network packet. As for NET_IP_ALIGN, this unaligned DMA is expensive
@@ -1141,11 +1141,11 @@
  * perhaps setting it to a cacheline in size (since that will maintain
  * cacheline alignment of the DMA). It must be a power of 2.
  *
- * Various parts of the networking layer expect at least 16 bytes of
+ * Various parts of the networking layer expect at least 32 bytes of
  * headroom, you should not reduce this.
  */
 #ifndef NET_SKB_PAD
-#define NET_SKB_PAD	16
+#define NET_SKB_PAD	32
 #endif
 
 extern int ___pskb_trim(struct sk_buff *skb, unsigned int len);
