diff -r 42d7cf1fbfbb drivers/xen/netback/interface.c
--- a/drivers/xen/netback/interface.c	Wed May 26 15:04:32 2010 +0100
+++ b/drivers/xen/netback/interface.c	Wed May 26 15:05:28 2010 +0100
@@ -339,7 +339,6 @@
 		netif->dev->name, netif);
 	if (err < 0)
 		goto err_hypervisor;
-	BUG_ON(err < DYNIRQ_BASE || err >= DYNIRQ_BASE + NR_DYNIRQS);
 	netif->irq = err;
 	disable_irq(netif->irq);
 
diff -r 42d7cf1fbfbb drivers/xen/netback/netback.c
--- a/drivers/xen/netback/netback.c	Wed May 26 15:04:32 2010 +0100
+++ b/drivers/xen/netback/netback.c	Wed May 26 15:05:28 2010 +0100
@@ -590,12 +590,8 @@
 	static mmu_update_t rx_mmu[NET_RX_RING_SIZE];
 	static gnttab_transfer_t grant_trans_op[NET_RX_RING_SIZE];
 	static gnttab_copy_t grant_copy_op[NET_RX_RING_SIZE];
-	static DECLARE_BITMAP(rx_notify, NR_DYNIRQS);
-#if NR_DYNIRQS <= 0x10000
+	static unsigned char rx_notify[NR_IRQS];
 	static u16 notify_list[NET_RX_RING_SIZE];
-#else
-	static int notify_list[NET_RX_RING_SIZE];
-#endif
 	static struct netbk_rx_meta meta[NET_RX_RING_SIZE];
 
 	struct netrx_pending_operations npo = {
@@ -753,9 +749,11 @@
 					 nr_frags);
 
 		RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(&netif->rx, ret);
-		irq = netif->irq - DYNIRQ_BASE;
-		if (ret && !__test_and_set_bit(irq, rx_notify))
+		irq = netif->irq;
+		if (ret && !rx_notify[irq]) {
+			rx_notify[irq] = 1;
 			notify_list[notify_nr++] = irq;
+		}
 
 		if (netif_queue_stopped(netif->dev) &&
 		    netif_schedulable(netif) &&
@@ -780,8 +778,8 @@
 
 	while (notify_nr != 0) {
 		irq = notify_list[--notify_nr];
-		__clear_bit(irq, rx_notify);
-		notify_remote_via_irq(irq + DYNIRQ_BASE);
+		rx_notify[irq] = 0;
+		notify_remote_via_irq(irq);
 	}
 
 	/* More work to do? */
