diff -r 7c4db760ae39 drivers/xen/blkback/blkback.c
--- a/drivers/xen/blkback/blkback.c	Wed May 26 16:47:12 2010 +0100
+++ b/drivers/xen/blkback/blkback.c	Wed May 26 16:49:01 2010 +0100
@@ -108,7 +108,7 @@
 
 
 static int do_block_io_op(blkif_t *blkif);
-static int dispatch_rw_block_io(blkif_t *blkif,
+static void dispatch_rw_block_io(blkif_t *blkif,
 				 blkif_request_t *req,
 				 pending_req_t *pending_req);
 static void make_response(blkif_t *blkif, u64 id,
@@ -311,13 +311,13 @@
 	blkif_request_t req;
 	pending_req_t *pending_req;
 	RING_IDX rc, rp;
-	int more_to_do = 0, ret;
+	int more_to_do = 0;
 
 	rc = blk_rings->common.req_cons;
 	rp = blk_rings->common.sring->req_prod;
 	rmb(); /* Ensure we see queued requests up to 'rp'. */
 
-	while ((rc != rp) || (blkif->is_suspended_req)) {
+	while (rc != rp) {
 
 		if (RING_REQUEST_CONS_OVERFLOW(&blk_rings->common, rc))
 			break;
@@ -333,14 +333,6 @@
 			more_to_do = 1;
 			break;
 		}
-
-        /* Handle the suspended request first, if one exists */
-        if(blkif->is_suspended_req)
-        {
-            memcpy(&req, &blkif->suspended_req, sizeof(req));
-            blkif->is_suspended_req = 0;
-            goto handle_request;
-        }
 
 		switch (blkif->blk_protocol) {
 		case BLKIF_PROTOCOL_NATIVE:
@@ -360,19 +352,17 @@
 		/* Apply all sanity checks to /private copy/ of request. */
 		barrier();
 
-handle_request:
-        ret = 0;
 		switch (req.operation) {
 		case BLKIF_OP_READ:
 			blkif->st_rd_req++;
-			ret = dispatch_rw_block_io(blkif, &req, pending_req); 
+			dispatch_rw_block_io(blkif, &req, pending_req);
 			break;
 		case BLKIF_OP_WRITE_BARRIER:
 			blkif->st_br_req++;
 			/* fall through */
 		case BLKIF_OP_WRITE:
 			blkif->st_wr_req++;
-			ret = dispatch_rw_block_io(blkif, &req, pending_req);
+			dispatch_rw_block_io(blkif, &req, pending_req);
 			break;
 		default:
 			/* A good sign something is wrong: sleep for a while to
@@ -385,17 +375,6 @@
 			free_req(pending_req);
 			break;
 		}
-        BUG_ON(ret != 0 && ret != -EAGAIN);
-        /* If we can't handle the request at the moment, save it, and break the
-         * loop */ 
-        if(ret == -EAGAIN)
-        {
-            memcpy(&blkif->suspended_req, &req, sizeof(req));
-            blkif->is_suspended_req = 1;
-            /* Return "no more work pending", restart will be handled 'out of
-             * band' */
-            return 0;
-        }
 
 		/* Yield point for this unbounded loop. */
 		cond_resched();
@@ -404,7 +383,7 @@
 	return more_to_do;
 }
 
-static int dispatch_rw_block_io(blkif_t *blkif,
+static void dispatch_rw_block_io(blkif_t *blkif,
 				 blkif_request_t *req,
 				 pending_req_t *pending_req)
 {
@@ -473,15 +452,11 @@
 	ret = HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, map, nseg);
 	BUG_ON(ret);
 
-#define GENERAL_ERR   (1<<0)
-#define EAGAIN_ERR    (1<<1)
 	for (i = 0; i < nseg; i++) {
 		if (unlikely(map[i].status != 0)) {
 			DPRINTK("invalid buffer -- could not remap it\n");
 			map[i].handle = BLKBACK_INVALID_HANDLE;
-			ret |= GENERAL_ERR;
-            if(map[i].status == GNTST_eagain)
-			    ret |= EAGAIN_ERR;
+			ret |= 1;
 		}
 
 		pending_handle(pending_req, i) = map[i].handle;
@@ -500,14 +475,6 @@
 		seg[i].buf  = map[i].dev_bus_addr | 
 			(req->seg[i].first_sect << 9);
 	}
-
-    /* If any of grant maps failed with GNTST_eagain, suspend and retry later */
-    if(ret & EAGAIN_ERR)
-    {
-        fast_flush_area(pending_req);
-        free_req(pending_req);
-        return -EAGAIN;
-    }
 
 	if (ret)
 		goto fail_flush;
@@ -574,7 +541,7 @@
 	else if (operation == WRITE || operation == WRITE_BARRIER)
 		blkif->st_wr_sect += preq.nr_sects;
 
-	return 0;
+	return;
 
  fail_flush:
 	fast_flush_area(pending_req);
@@ -582,7 +549,7 @@
 	make_response(blkif, req->id, req->operation, BLKIF_RSP_ERROR);
 	free_req(pending_req);
 	msleep(1); /* back off a bit */
-	return 0;
+	return;
 
  fail_put_bio:
 	__end_block_io_op(pending_req, -EINVAL);
@@ -590,7 +557,7 @@
 		bio_put(bio);
 	unplug_queue(blkif);
 	msleep(1); /* back off a bit */
-	return 0;
+	return;
 }
 
 
diff -r 7c4db760ae39 drivers/xen/blkback/interface.c
--- a/drivers/xen/blkback/interface.c	Wed May 26 16:47:12 2010 +0100
+++ b/drivers/xen/blkback/interface.c	Wed May 26 16:49:01 2010 +0100
@@ -33,7 +33,6 @@
 #include "common.h"
 #include <xen/evtchn.h>
 #include <linux/kthread.h>
-#include <linux/delay.h>
 
 static struct kmem_cache *blkif_cachep;
 
@@ -63,11 +62,8 @@
 	gnttab_set_map_op(&op, (unsigned long)blkif->blk_ring_area->addr,
 			  GNTMAP_host_map, shared_page, blkif->domid);
 
-    do {
-	    if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
-		    BUG();
-        msleep(100);
-    } while(op.status == GNTST_eagain);
+	if (HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1))
+		BUG();
 
 	if (op.status) {
 		DPRINTK(" Grant table operation failure !\n");
