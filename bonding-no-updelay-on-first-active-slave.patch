diff -r c38e5536201f drivers/net/bonding/bond_main.c
--- a/drivers/net/bonding/bond_main.c	Wed Jan 07 16:22:30 2009 +0000
+++ b/drivers/net/bonding/bond_main.c	Wed Jan 07 16:26:42 2009 +0000
@@ -626,6 +626,21 @@
 }
 
 /*
+ * Count the number of slaves with link == BOND_LINK_*
+ */
+static int bond_count_slaves(struct bonding *bond, int link)
+{
+	struct slave *slave;
+	int i, count=0;
+
+	bond_for_each_slave(bond, slave, i) {
+		if (slave->link == link)
+			count++;
+	}
+	return count;
+}
+
+/*
  * Get link speed and duplex from the slave's base driver
  * using ethtool. If for some reason the call fails or the
  * values are invalid, fake speed and duplex to 100/Full
@@ -2299,13 +2314,20 @@
 		case BOND_LINK_DOWN:
 			if (!link_state)
 				continue;
-
-			slave->link = BOND_LINK_BACK;
-			slave->delay = bond->params.updelay;
-
-			if (slave->delay) {
-				pr_info(DRV_NAME
-				       ": %s: link status up for "
+				slave->link = BOND_LINK_BACK;
+				slave->delay = 0;
+
+				if (bond_count_slaves(bond, BOND_LINK_UP) == 0) {
+					pr_info(DRV_NAME
+					        ": %s: link status up for "
+					        "interface %s, enabling it "
+					        "immediately as it is the only slave.\n",
+					        bond->dev->name,
+					        slave->dev->name);
+				} else if (bond->params.updelay) {
+					slave->delay = bond->params.updelay;
+					pr_info(DRV_NAME
+					        ": %s: link status up for "
 				       "interface %s, enabling it in %d ms.\n",
 				       bond->dev->name, slave->dev->name,
 				       bond->params.updelay *
