From 6d3d90ab1697aecb6ae223cc6018237b4b7689ad Mon Sep 17 00:00:00 2001
From: Jan Beulich <jbeulich@novell.com>
Date: Fri, 5 Feb 2010 19:19:26 +0000
Subject: [PATCH 12/23] blktap2: allow to build as module

... and also allow to interact with blkback when that's also built as
a module.

linux-2.6-pvops:
 * Strip n/a xen_tlb_flush exports
 * Fix obj macro naming in Makefile
 * Avoid init_mm, remap kernel ranges using tapdisk's mm instead.
 * gpl-export zap_page_range

Signed-off-by: Jan Beulich <jbeulich@novell.com>
Signed-off-by: Daniel Stodden <daniel.stodden@citrix.com>
Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
---
 drivers/xen/blktap2/Makefile |    2 +-
 drivers/xen/blktap2/device.c |    7 ++++---
 mm/memory.c                 |    1 +
 3 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/xen/blktap2/Makefile b/drivers/xen/blktap2/Makefile
index d1520f9..99ff53c 100644
--- a/drivers/xen/blktap2/Makefile
+++ b/drivers/xen/blktap2/Makefile
@@ -1,3 +1,3 @@
-obj-y := blktap.o
+obj-$(CONFIG_XEN_BLKDEV_TAP) := blktap.o
 
 blktap-objs := control.o ring.o wait_queue.o device.o request.o sysfs.o
diff --git a/drivers/xen/blktap2/device.c b/drivers/xen/blktap2/device.c
index a04c9b4..7505d0c 100644
--- a/drivers/xen/blktap2/device.c
+++ b/drivers/xen/blktap2/device.c
@@ -17,7 +17,8 @@
 
 #include "blktap.h"
 
-#ifdef CONFIG_XEN_BLKDEV_BACKEND
+#if defined(CONFIG_XEN_BLKDEV_BACKEND) || \
+    (defined(CONFIG_XEN_BLKDEV_BACKEND_MODULE) && defined(MODULE))
 #include "../blkback/blkback-pagemap.h"
 #else
 struct blkback_pagemap { };
@@ -324,7 +325,7 @@ blktap_unmap(struct blktap *tap, struct blktap_request *request)
 
 		if (request->handles[i].kernel == INVALID_GRANT_HANDLE) {
 			kvaddr = request_to_kaddr(request, i);
-			blktap_umap_uaddr(&init_mm, kvaddr);
+			blktap_umap_uaddr(tap->ring.vma->vm_mm, kvaddr);
 			flush_tlb_kernel_range(kvaddr, kvaddr + PAGE_SIZE);
 			set_phys_to_machine(__pa(kvaddr) >> PAGE_SHIFT,
 					    INVALID_P2M_ENTRY);
@@ -561,7 +562,7 @@ blktap_map(struct blktap *tap,
 	pte = mk_pte(page, ring->vma->vm_page_prot);
 	blktap_map_uaddr(ring->vma->vm_mm, uvaddr, pte_mkwrite(pte));
 	flush_tlb_mm(ring->vma->vm_mm);
-	blktap_map_uaddr(&init_mm, kvaddr, mk_pte(page, PAGE_KERNEL));
+	blktap_map_uaddr(ring->vma->vm_mm, kvaddr, mk_pte(page, PAGE_KERNEL));
 	flush_tlb_kernel_range(kvaddr, kvaddr + PAGE_SIZE);
 
 	set_phys_to_machine(__pa(kvaddr) >> PAGE_SHIFT, pte_mfn(pte));
# diff --git a/mm/memory.c b/mm/memory.c
# index d25a069..dd67a35 100644
# --- a/mm/memory.c
# +++ b/mm/memory.c
# @@ -1074,6 +1074,7 @@ unsigned long zap_page_range(struct vm_area_struct *vma, unsigned long address,
#  		tlb_finish_mmu(tlb, address, end);
#  	return end;
#  }
# +EXPORT_SYMBOL_GPL(zap_page_range);
#  
#  /**
#   * zap_vma_ptes - remove ptes mapping the vma
# -- 
# 1.7.0.4
# 
